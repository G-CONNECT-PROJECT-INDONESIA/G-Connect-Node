/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_GCONNECT_PB_H_INCLUDED
#define PB_GCONNECT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SensorReading {
    float humidity;
    float wind_speed;
    float temperature;
    float rain_rate;
    float soil_moisture;
    float water_level;
    float longitude;
    float latitude;
    float roll;
    float pitch;
} SensorReading;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SensorReading_init_default               {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define SensorReading_init_zero                  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SensorReading_humidity_tag               1
#define SensorReading_wind_speed_tag             2
#define SensorReading_temperature_tag            3
#define SensorReading_rain_rate_tag              4
#define SensorReading_soil_moisture_tag          5
#define SensorReading_water_level_tag            6
#define SensorReading_longitude_tag              7
#define SensorReading_latitude_tag               8
#define SensorReading_roll_tag                   9
#define SensorReading_pitch_tag                  10

/* Struct field encoding specification for nanopb */
#define SensorReading_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    humidity,          1) \
X(a, STATIC,   REQUIRED, FLOAT,    wind_speed,        2) \
X(a, STATIC,   REQUIRED, FLOAT,    temperature,       3) \
X(a, STATIC,   REQUIRED, FLOAT,    rain_rate,         4) \
X(a, STATIC,   REQUIRED, FLOAT,    soil_moisture,     5) \
X(a, STATIC,   REQUIRED, FLOAT,    water_level,       6) \
X(a, STATIC,   REQUIRED, FLOAT,    longitude,         7) \
X(a, STATIC,   REQUIRED, FLOAT,    latitude,          8) \
X(a, STATIC,   REQUIRED, FLOAT,    roll,              9) \
X(a, STATIC,   REQUIRED, FLOAT,    pitch,            10)
#define SensorReading_CALLBACK NULL
#define SensorReading_DEFAULT NULL

extern const pb_msgdesc_t SensorReading_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SensorReading_fields &SensorReading_msg

/* Maximum encoded size of messages (where known) */
#define SensorReading_size                       50

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
